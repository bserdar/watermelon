// Code generated by protoc-gen-go. DO NOT EDIT.
// source: remote.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Execute a command on a remote host
type CommandRequest struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	HostId               string   `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	Command              string   `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandRequest) Reset()         { *m = CommandRequest{} }
func (m *CommandRequest) String() string { return proto.CompactTextString(m) }
func (*CommandRequest) ProtoMessage()    {}
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{0}
}

func (m *CommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandRequest.Unmarshal(m, b)
}
func (m *CommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandRequest.Marshal(b, m, deterministic)
}
func (m *CommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandRequest.Merge(m, src)
}
func (m *CommandRequest) XXX_Size() int {
	return xxx_messageInfo_CommandRequest.Size(m)
}
func (m *CommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommandRequest proto.InternalMessageInfo

func (m *CommandRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *CommandRequest) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *CommandRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

// Response of a remote command execution
type CommandResponse struct {
	Stdout               []byte   `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               []byte   `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ExitCode             int64    `protobuf:"varint,3,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandResponse) Reset()         { *m = CommandResponse{} }
func (m *CommandResponse) String() string { return proto.CompactTextString(m) }
func (*CommandResponse) ProtoMessage()    {}
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{1}
}

func (m *CommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandResponse.Unmarshal(m, b)
}
func (m *CommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandResponse.Marshal(b, m, deterministic)
}
func (m *CommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandResponse.Merge(m, src)
}
func (m *CommandResponse) XXX_Size() int {
	return xxx_messageInfo_CommandResponse.Size(m)
}
func (m *CommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommandResponse proto.InternalMessageInfo

func (m *CommandResponse) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *CommandResponse) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *CommandResponse) GetExitCode() int64 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

type ReadRequest struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	HostId               string   `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	File                 string   `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{2}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *ReadRequest) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *ReadRequest) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

// ReadResponse is processes as a stream. Only the first received block contains
// file info, remaining segments only contain the data.
type ReadResponse struct {
	Data                 []byte        `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Size                 int64         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Info                 *FileInfo     `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	Found                bool          `protobuf:"varint,4,opt,name=found,proto3" json:"found,omitempty"`
	Error                *CommandError `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{3}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ReadResponse) GetInfo() *FileInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ReadResponse) GetFound() bool {
	if m != nil {
		return m.Found
	}
	return false
}

func (m *ReadResponse) GetError() *CommandError {
	if m != nil {
		return m.Error
	}
	return nil
}

// WaitHostRequest is used to wait until host becomes available.
type WaitHostRequest struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	HostId               string   `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	Timeout              int64    `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitHostRequest) Reset()         { *m = WaitHostRequest{} }
func (m *WaitHostRequest) String() string { return proto.CompactTextString(m) }
func (*WaitHostRequest) ProtoMessage()    {}
func (*WaitHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{4}
}

func (m *WaitHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitHostRequest.Unmarshal(m, b)
}
func (m *WaitHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitHostRequest.Marshal(b, m, deterministic)
}
func (m *WaitHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitHostRequest.Merge(m, src)
}
func (m *WaitHostRequest) XXX_Size() int {
	return xxx_messageInfo_WaitHostRequest.Size(m)
}
func (m *WaitHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WaitHostRequest proto.InternalMessageInfo

func (m *WaitHostRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *WaitHostRequest) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *WaitHostRequest) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

// WriteRequest
type WriteRequest struct {
	Session         string `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	HostId          string `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	Perms           int64  `protobuf:"varint,4,opt,name=perms,proto3" json:"perms,omitempty"`
	Name            string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	OnlyIfDifferent bool   `protobuf:"varint,7,opt,name=onlyIfDifferent,proto3" json:"onlyIfDifferent,omitempty"`
	// Types that are valid to be assigned to Source:
	//	*WriteRequest_Data
	//	*WriteRequest_Template
	Source               isWriteRequest_Source `protobuf_oneof:"source"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{5}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *WriteRequest) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *WriteRequest) GetPerms() int64 {
	if m != nil {
		return m.Perms
	}
	return 0
}

func (m *WriteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WriteRequest) GetOnlyIfDifferent() bool {
	if m != nil {
		return m.OnlyIfDifferent
	}
	return false
}

type isWriteRequest_Source interface {
	isWriteRequest_Source()
}

type WriteRequest_Data struct {
	Data []byte `protobuf:"bytes,8,opt,name=data,proto3,oneof"`
}

type WriteRequest_Template struct {
	Template *TemplateRequest `protobuf:"bytes,9,opt,name=template,proto3,oneof"`
}

func (*WriteRequest_Data) isWriteRequest_Source() {}

func (*WriteRequest_Template) isWriteRequest_Source() {}

func (m *WriteRequest) GetSource() isWriteRequest_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *WriteRequest) GetData() []byte {
	if x, ok := m.GetSource().(*WriteRequest_Data); ok {
		return x.Data
	}
	return nil
}

func (m *WriteRequest) GetTemplate() *TemplateRequest {
	if x, ok := m.GetSource().(*WriteRequest_Template); ok {
		return x.Template
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*WriteRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _WriteRequest_OneofMarshaler, _WriteRequest_OneofUnmarshaler, _WriteRequest_OneofSizer, []interface{}{
		(*WriteRequest_Data)(nil),
		(*WriteRequest_Template)(nil),
	}
}

func _WriteRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*WriteRequest)
	// source
	switch x := m.Source.(type) {
	case *WriteRequest_Data:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Data)
	case *WriteRequest_Template:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Template); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("WriteRequest.Source has unexpected type %T", x)
	}
	return nil
}

func _WriteRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*WriteRequest)
	switch tag {
	case 8: // source.data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Source = &WriteRequest_Data{x}
		return true, err
	case 9: // source.template
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TemplateRequest)
		err := b.DecodeMessage(msg)
		m.Source = &WriteRequest_Template{msg}
		return true, err
	default:
		return false, nil
	}
}

func _WriteRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*WriteRequest)
	// source
	switch x := m.Source.(type) {
	case *WriteRequest_Data:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Data)))
		n += len(x.Data)
	case *WriteRequest_Template:
		s := proto.Size(x.Template)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type WriteResponse struct {
	Modified             bool          `protobuf:"varint,1,opt,name=modified,proto3" json:"modified,omitempty"`
	Error                *CommandError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WriteResponse) Reset()         { *m = WriteResponse{} }
func (m *WriteResponse) String() string { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()    {}
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{6}
}

func (m *WriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteResponse.Unmarshal(m, b)
}
func (m *WriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteResponse.Marshal(b, m, deterministic)
}
func (m *WriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteResponse.Merge(m, src)
}
func (m *WriteResponse) XXX_Size() int {
	return xxx_messageInfo_WriteResponse.Size(m)
}
func (m *WriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteResponse proto.InternalMessageInfo

func (m *WriteResponse) GetModified() bool {
	if m != nil {
		return m.Modified
	}
	return false
}

func (m *WriteResponse) GetError() *CommandError {
	if m != nil {
		return m.Error
	}
	return nil
}

type TemplateRequest struct {
	Template             string   `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TemplateRequest) Reset()         { *m = TemplateRequest{} }
func (m *TemplateRequest) String() string { return proto.CompactTextString(m) }
func (*TemplateRequest) ProtoMessage()    {}
func (*TemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{7}
}

func (m *TemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TemplateRequest.Unmarshal(m, b)
}
func (m *TemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TemplateRequest.Marshal(b, m, deterministic)
}
func (m *TemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemplateRequest.Merge(m, src)
}
func (m *TemplateRequest) XXX_Size() int {
	return xxx_messageInfo_TemplateRequest.Size(m)
}
func (m *TemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TemplateRequest proto.InternalMessageInfo

func (m *TemplateRequest) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *TemplateRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type TemplateResponse struct {
	Out                  string        `protobuf:"bytes,1,opt,name=out,proto3" json:"out,omitempty"`
	Error                *CommandError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TemplateResponse) Reset()         { *m = TemplateResponse{} }
func (m *TemplateResponse) String() string { return proto.CompactTextString(m) }
func (*TemplateResponse) ProtoMessage()    {}
func (*TemplateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{8}
}

func (m *TemplateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TemplateResponse.Unmarshal(m, b)
}
func (m *TemplateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TemplateResponse.Marshal(b, m, deterministic)
}
func (m *TemplateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemplateResponse.Merge(m, src)
}
func (m *TemplateResponse) XXX_Size() int {
	return xxx_messageInfo_TemplateResponse.Size(m)
}
func (m *TemplateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TemplateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TemplateResponse proto.InternalMessageInfo

func (m *TemplateResponse) GetOut() string {
	if m != nil {
		return m.Out
	}
	return ""
}

func (m *TemplateResponse) GetError() *CommandError {
	if m != nil {
		return m.Error
	}
	return nil
}

type EnsureRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Mode                 int32    `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	SetMode              bool     `protobuf:"varint,4,opt,name=setMode,proto3" json:"setMode,omitempty"`
	Uid                  string   `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`
	SetUid               bool     `protobuf:"varint,6,opt,name=setUid,proto3" json:"setUid,omitempty"`
	Gid                  string   `protobuf:"bytes,7,opt,name=gid,proto3" json:"gid,omitempty"`
	SetGid               bool     `protobuf:"varint,8,opt,name=setGid,proto3" json:"setGid,omitempty"`
	User                 string   `protobuf:"bytes,9,opt,name=user,proto3" json:"user,omitempty"`
	SetUser              bool     `protobuf:"varint,10,opt,name=setUser,proto3" json:"setUser,omitempty"`
	Group                string   `protobuf:"bytes,11,opt,name=group,proto3" json:"group,omitempty"`
	SetGroup             bool     `protobuf:"varint,12,opt,name=setGroup,proto3" json:"setGroup,omitempty"`
	Dir                  bool     `protobuf:"varint,13,opt,name=dir,proto3" json:"dir,omitempty"`
	CheckDir             bool     `protobuf:"varint,14,opt,name=checkDir,proto3" json:"checkDir,omitempty"`
	Session              string   `protobuf:"bytes,20,opt,name=session,proto3" json:"session,omitempty"`
	HostId               string   `protobuf:"bytes,21,opt,name=hostId,proto3" json:"hostId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnsureRequest) Reset()         { *m = EnsureRequest{} }
func (m *EnsureRequest) String() string { return proto.CompactTextString(m) }
func (*EnsureRequest) ProtoMessage()    {}
func (*EnsureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{9}
}

func (m *EnsureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnsureRequest.Unmarshal(m, b)
}
func (m *EnsureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnsureRequest.Marshal(b, m, deterministic)
}
func (m *EnsureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnsureRequest.Merge(m, src)
}
func (m *EnsureRequest) XXX_Size() int {
	return xxx_messageInfo_EnsureRequest.Size(m)
}
func (m *EnsureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnsureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnsureRequest proto.InternalMessageInfo

func (m *EnsureRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *EnsureRequest) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *EnsureRequest) GetSetMode() bool {
	if m != nil {
		return m.SetMode
	}
	return false
}

func (m *EnsureRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *EnsureRequest) GetSetUid() bool {
	if m != nil {
		return m.SetUid
	}
	return false
}

func (m *EnsureRequest) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

func (m *EnsureRequest) GetSetGid() bool {
	if m != nil {
		return m.SetGid
	}
	return false
}

func (m *EnsureRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *EnsureRequest) GetSetUser() bool {
	if m != nil {
		return m.SetUser
	}
	return false
}

func (m *EnsureRequest) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *EnsureRequest) GetSetGroup() bool {
	if m != nil {
		return m.SetGroup
	}
	return false
}

func (m *EnsureRequest) GetDir() bool {
	if m != nil {
		return m.Dir
	}
	return false
}

func (m *EnsureRequest) GetCheckDir() bool {
	if m != nil {
		return m.CheckDir
	}
	return false
}

func (m *EnsureRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *EnsureRequest) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

type EnsureResponse struct {
	Changed              bool          `protobuf:"varint,1,opt,name=changed,proto3" json:"changed,omitempty"`
	Error                *CommandError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *EnsureResponse) Reset()         { *m = EnsureResponse{} }
func (m *EnsureResponse) String() string { return proto.CompactTextString(m) }
func (*EnsureResponse) ProtoMessage()    {}
func (*EnsureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{10}
}

func (m *EnsureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnsureResponse.Unmarshal(m, b)
}
func (m *EnsureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnsureResponse.Marshal(b, m, deterministic)
}
func (m *EnsureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnsureResponse.Merge(m, src)
}
func (m *EnsureResponse) XXX_Size() int {
	return xxx_messageInfo_EnsureResponse.Size(m)
}
func (m *EnsureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnsureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnsureResponse proto.InternalMessageInfo

func (m *EnsureResponse) GetChanged() bool {
	if m != nil {
		return m.Changed
	}
	return false
}

func (m *EnsureResponse) GetError() *CommandError {
	if m != nil {
		return m.Error
	}
	return nil
}

type PathRequest struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	HostId               string   `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PathRequest) Reset()         { *m = PathRequest{} }
func (m *PathRequest) String() string { return proto.CompactTextString(m) }
func (*PathRequest) ProtoMessage()    {}
func (*PathRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{11}
}

func (m *PathRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PathRequest.Unmarshal(m, b)
}
func (m *PathRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PathRequest.Marshal(b, m, deterministic)
}
func (m *PathRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PathRequest.Merge(m, src)
}
func (m *PathRequest) XXX_Size() int {
	return xxx_messageInfo_PathRequest.Size(m)
}
func (m *PathRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PathRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PathRequest proto.InternalMessageInfo

func (m *PathRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *PathRequest) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *PathRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ChmodRequest struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	HostId               string   `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Mode                 int32    `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChmodRequest) Reset()         { *m = ChmodRequest{} }
func (m *ChmodRequest) String() string { return proto.CompactTextString(m) }
func (*ChmodRequest) ProtoMessage()    {}
func (*ChmodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{12}
}

func (m *ChmodRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChmodRequest.Unmarshal(m, b)
}
func (m *ChmodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChmodRequest.Marshal(b, m, deterministic)
}
func (m *ChmodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChmodRequest.Merge(m, src)
}
func (m *ChmodRequest) XXX_Size() int {
	return xxx_messageInfo_ChmodRequest.Size(m)
}
func (m *ChmodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChmodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChmodRequest proto.InternalMessageInfo

func (m *ChmodRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *ChmodRequest) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *ChmodRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ChmodRequest) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type ChownRequest struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	HostId               string   `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	User                 string   `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Group                string   `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChownRequest) Reset()         { *m = ChownRequest{} }
func (m *ChownRequest) String() string { return proto.CompactTextString(m) }
func (*ChownRequest) ProtoMessage()    {}
func (*ChownRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{13}
}

func (m *ChownRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChownRequest.Unmarshal(m, b)
}
func (m *ChownRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChownRequest.Marshal(b, m, deterministic)
}
func (m *ChownRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChownRequest.Merge(m, src)
}
func (m *ChownRequest) XXX_Size() int {
	return xxx_messageInfo_ChownRequest.Size(m)
}
func (m *ChownRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChownRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChownRequest proto.InternalMessageInfo

func (m *ChownRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *ChownRequest) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *ChownRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ChownRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ChownRequest) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

type GetFileInfoResponse struct {
	Owner                *FileOwner    `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Info                 *FileInfo     `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Error                *CommandError `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetFileInfoResponse) Reset()         { *m = GetFileInfoResponse{} }
func (m *GetFileInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetFileInfoResponse) ProtoMessage()    {}
func (*GetFileInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{14}
}

func (m *GetFileInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileInfoResponse.Unmarshal(m, b)
}
func (m *GetFileInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetFileInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileInfoResponse.Merge(m, src)
}
func (m *GetFileInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetFileInfoResponse.Size(m)
}
func (m *GetFileInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileInfoResponse proto.InternalMessageInfo

func (m *GetFileInfoResponse) GetOwner() *FileOwner {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *GetFileInfoResponse) GetInfo() *FileInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *GetFileInfoResponse) GetError() *CommandError {
	if m != nil {
		return m.Error
	}
	return nil
}

type OSResponse struct {
	Error                *CommandError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OSResponse) Reset()         { *m = OSResponse{} }
func (m *OSResponse) String() string { return proto.CompactTextString(m) }
func (*OSResponse) ProtoMessage()    {}
func (*OSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{15}
}

func (m *OSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OSResponse.Unmarshal(m, b)
}
func (m *OSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OSResponse.Marshal(b, m, deterministic)
}
func (m *OSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OSResponse.Merge(m, src)
}
func (m *OSResponse) XXX_Size() int {
	return xxx_messageInfo_OSResponse.Size(m)
}
func (m *OSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OSResponse proto.InternalMessageInfo

func (m *OSResponse) GetError() *CommandError {
	if m != nil {
		return m.Error
	}
	return nil
}

type FileOwner struct {
	OwnerName            string   `protobuf:"bytes,1,opt,name=OwnerName,proto3" json:"OwnerName,omitempty"`
	OwnerID              string   `protobuf:"bytes,2,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	GroupName            string   `protobuf:"bytes,3,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	GroupID              string   `protobuf:"bytes,4,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileOwner) Reset()         { *m = FileOwner{} }
func (m *FileOwner) String() string { return proto.CompactTextString(m) }
func (*FileOwner) ProtoMessage()    {}
func (*FileOwner) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{16}
}

func (m *FileOwner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileOwner.Unmarshal(m, b)
}
func (m *FileOwner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileOwner.Marshal(b, m, deterministic)
}
func (m *FileOwner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileOwner.Merge(m, src)
}
func (m *FileOwner) XXX_Size() int {
	return xxx_messageInfo_FileOwner.Size(m)
}
func (m *FileOwner) XXX_DiscardUnknown() {
	xxx_messageInfo_FileOwner.DiscardUnknown(m)
}

var xxx_messageInfo_FileOwner proto.InternalMessageInfo

func (m *FileOwner) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *FileOwner) GetOwnerID() string {
	if m != nil {
		return m.OwnerID
	}
	return ""
}

func (m *FileOwner) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *FileOwner) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

type FileInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Mode                 int32    `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Time                 int64    `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	Dir                  bool     `protobuf:"varint,5,opt,name=dir,proto3" json:"dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileInfo) Reset()         { *m = FileInfo{} }
func (m *FileInfo) String() string { return proto.CompactTextString(m) }
func (*FileInfo) ProtoMessage()    {}
func (*FileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{17}
}

func (m *FileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfo.Unmarshal(m, b)
}
func (m *FileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfo.Marshal(b, m, deterministic)
}
func (m *FileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfo.Merge(m, src)
}
func (m *FileInfo) XXX_Size() int {
	return xxx_messageInfo_FileInfo.Size(m)
}
func (m *FileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfo proto.InternalMessageInfo

func (m *FileInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileInfo) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileInfo) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *FileInfo) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *FileInfo) GetDir() bool {
	if m != nil {
		return m.Dir
	}
	return false
}

type CopyRequest struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	FromHost             string   `protobuf:"bytes,2,opt,name=fromHost,proto3" json:"fromHost,omitempty"`
	FromPath             string   `protobuf:"bytes,3,opt,name=fromPath,proto3" json:"fromPath,omitempty"`
	ToHost               string   `protobuf:"bytes,4,opt,name=toHost,proto3" json:"toHost,omitempty"`
	ToPath               string   `protobuf:"bytes,5,opt,name=toPath,proto3" json:"toPath,omitempty"`
	OnlyIfDifferent      bool     `protobuf:"varint,6,opt,name=onlyIfDifferent,proto3" json:"onlyIfDifferent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CopyRequest) Reset()         { *m = CopyRequest{} }
func (m *CopyRequest) String() string { return proto.CompactTextString(m) }
func (*CopyRequest) ProtoMessage()    {}
func (*CopyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{18}
}

func (m *CopyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyRequest.Unmarshal(m, b)
}
func (m *CopyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyRequest.Marshal(b, m, deterministic)
}
func (m *CopyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyRequest.Merge(m, src)
}
func (m *CopyRequest) XXX_Size() int {
	return xxx_messageInfo_CopyRequest.Size(m)
}
func (m *CopyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CopyRequest proto.InternalMessageInfo

func (m *CopyRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *CopyRequest) GetFromHost() string {
	if m != nil {
		return m.FromHost
	}
	return ""
}

func (m *CopyRequest) GetFromPath() string {
	if m != nil {
		return m.FromPath
	}
	return ""
}

func (m *CopyRequest) GetToHost() string {
	if m != nil {
		return m.ToHost
	}
	return ""
}

func (m *CopyRequest) GetToPath() string {
	if m != nil {
		return m.ToPath
	}
	return ""
}

func (m *CopyRequest) GetOnlyIfDifferent() bool {
	if m != nil {
		return m.OnlyIfDifferent
	}
	return false
}

type CopyResponse struct {
	Changed              bool          `protobuf:"varint,1,opt,name=changed,proto3" json:"changed,omitempty"`
	Error                *CommandError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CopyResponse) Reset()         { *m = CopyResponse{} }
func (m *CopyResponse) String() string { return proto.CompactTextString(m) }
func (*CopyResponse) ProtoMessage()    {}
func (*CopyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{19}
}

func (m *CopyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyResponse.Unmarshal(m, b)
}
func (m *CopyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyResponse.Marshal(b, m, deterministic)
}
func (m *CopyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyResponse.Merge(m, src)
}
func (m *CopyResponse) XXX_Size() int {
	return xxx_messageInfo_CopyResponse.Size(m)
}
func (m *CopyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CopyResponse proto.InternalMessageInfo

func (m *CopyResponse) GetChanged() bool {
	if m != nil {
		return m.Changed
	}
	return false
}

func (m *CopyResponse) GetError() *CommandError {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*CommandRequest)(nil), "pb.CommandRequest")
	proto.RegisterType((*CommandResponse)(nil), "pb.CommandResponse")
	proto.RegisterType((*ReadRequest)(nil), "pb.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "pb.ReadResponse")
	proto.RegisterType((*WaitHostRequest)(nil), "pb.WaitHostRequest")
	proto.RegisterType((*WriteRequest)(nil), "pb.WriteRequest")
	proto.RegisterType((*WriteResponse)(nil), "pb.WriteResponse")
	proto.RegisterType((*TemplateRequest)(nil), "pb.TemplateRequest")
	proto.RegisterType((*TemplateResponse)(nil), "pb.TemplateResponse")
	proto.RegisterType((*EnsureRequest)(nil), "pb.EnsureRequest")
	proto.RegisterType((*EnsureResponse)(nil), "pb.EnsureResponse")
	proto.RegisterType((*PathRequest)(nil), "pb.PathRequest")
	proto.RegisterType((*ChmodRequest)(nil), "pb.ChmodRequest")
	proto.RegisterType((*ChownRequest)(nil), "pb.ChownRequest")
	proto.RegisterType((*GetFileInfoResponse)(nil), "pb.GetFileInfoResponse")
	proto.RegisterType((*OSResponse)(nil), "pb.OSResponse")
	proto.RegisterType((*FileOwner)(nil), "pb.FileOwner")
	proto.RegisterType((*FileInfo)(nil), "pb.FileInfo")
	proto.RegisterType((*CopyRequest)(nil), "pb.CopyRequest")
	proto.RegisterType((*CopyResponse)(nil), "pb.CopyResponse")
}

func init() { proto.RegisterFile("remote.proto", fileDescriptor_eefc82927d57d89b) }

var fileDescriptor_eefc82927d57d89b = []byte{
	// 1070 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdb, 0x6e, 0xe4, 0x44,
	0x13, 0xde, 0xc9, 0x8c, 0x27, 0x9e, 0x9a, 0xc9, 0xe1, 0xef, 0xe4, 0x07, 0xcb, 0xe2, 0x22, 0x32,
	0x12, 0x64, 0x91, 0x48, 0x20, 0x80, 0xb8, 0x66, 0x93, 0x90, 0x44, 0x62, 0xd9, 0xa8, 0xc3, 0x6a,
	0x25, 0x04, 0x17, 0x9e, 0x71, 0x4f, 0xc6, 0xda, 0xb1, 0xdb, 0xb4, 0x7b, 0x08, 0x01, 0x89, 0x2b,
	0x9e, 0x01, 0x89, 0x47, 0xe1, 0x81, 0x10, 0xaf, 0x81, 0xaa, 0xfa, 0x60, 0x27, 0x3b, 0x1b, 0x56,
	0x24, 0x77, 0xf5, 0x55, 0x57, 0x95, 0xcb, 0x5f, 0x55, 0x57, 0x35, 0x8c, 0x94, 0x28, 0xa4, 0x16,
	0x7b, 0x95, 0x92, 0x5a, 0xb2, 0x95, 0x6a, 0x1c, 0xc3, 0x4c, 0xd6, 0xda, 0xe0, 0x78, 0x28, 0x8a,
	0x4a, 0x5f, 0x1b, 0x90, 0x7c, 0x07, 0xeb, 0x87, 0xb2, 0x28, 0xd2, 0x32, 0xe3, 0xe2, 0x87, 0x85,
	0xa8, 0x35, 0x8b, 0x60, 0xb5, 0x16, 0x75, 0x9d, 0xcb, 0x32, 0xea, 0xec, 0x74, 0x76, 0x07, 0xdc,
	0x41, 0xf6, 0x16, 0xf4, 0x31, 0xcc, 0x59, 0x16, 0xad, 0xd0, 0x81, 0x45, 0xe8, 0x31, 0x31, 0x31,
	0xa2, 0xae, 0xf1, 0xb0, 0x30, 0xf9, 0x1e, 0x36, 0x7c, 0xf4, 0xba, 0x92, 0x65, 0x2d, 0x30, 0x48,
	0xad, 0x33, 0xb9, 0xd0, 0x14, 0x7d, 0xc4, 0x2d, 0xb2, 0x7a, 0xa1, 0x14, 0x05, 0x37, 0x7a, 0xa1,
	0x14, 0x8b, 0x21, 0x14, 0x3f, 0xe5, 0xfa, 0x50, 0x66, 0x82, 0xa2, 0x77, 0xb9, 0xc7, 0xc9, 0x05,
	0x0c, 0xb9, 0x48, 0xef, 0x91, 0x39, 0x83, 0xde, 0x34, 0x9f, 0x0b, 0x9b, 0x36, 0xc9, 0xc9, 0xef,
	0x1d, 0x18, 0x99, 0xa8, 0x36, 0x63, 0x06, 0xbd, 0x2c, 0xd5, 0xa9, 0xcd, 0x97, 0x64, 0xd4, 0xd5,
	0xf9, 0xcf, 0x82, 0xc2, 0x75, 0x39, 0xc9, 0x6c, 0x07, 0x7a, 0x79, 0x39, 0x95, 0x14, 0x6c, 0x78,
	0x30, 0xda, 0xab, 0xc6, 0x7b, 0x5f, 0xe6, 0x73, 0x71, 0x56, 0x4e, 0x25, 0xa7, 0x13, 0xb6, 0x0d,
	0xc1, 0x54, 0x2e, 0xca, 0x2c, 0xea, 0xed, 0x74, 0x76, 0x43, 0x6e, 0x00, 0x7b, 0x0f, 0x02, 0xa1,
	0x94, 0x54, 0x51, 0x40, 0x8e, 0x9b, 0xe8, 0x68, 0x59, 0x3b, 0x46, 0x3d, 0x37, 0xc7, 0x48, 0xe6,
	0x8b, 0x34, 0xd7, 0xa7, 0xb2, 0xd6, 0xf7, 0xaa, 0x95, 0xce, 0x0b, 0x81, 0xfc, 0x1b, 0x36, 0x1d,
	0x4c, 0xfe, 0xee, 0xc0, 0xe8, 0x85, 0xca, 0xb5, 0xf8, 0xef, 0xc1, 0xb7, 0x21, 0xa8, 0x84, 0x2a,
	0x6a, 0xfa, 0xbf, 0x2e, 0x37, 0x00, 0xb9, 0x2a, 0xd3, 0x42, 0x44, 0x7d, 0x43, 0x32, 0xca, 0x6c,
	0x17, 0x36, 0x64, 0x39, 0xbf, 0x3e, 0x9b, 0x1e, 0xe5, 0xd3, 0xa9, 0x50, 0xa2, 0xd4, 0xd1, 0x2a,
	0x71, 0x72, 0x5b, 0xcd, 0xb6, 0x2d, 0xfb, 0x21, 0xb2, 0x7f, 0xfa, 0xc8, 0xf2, 0xff, 0x31, 0x84,
	0x5a, 0x14, 0xd5, 0x3c, 0xd5, 0x22, 0x1a, 0x10, 0x6d, 0x5b, 0x48, 0xdb, 0x37, 0x56, 0x67, 0x7f,
	0xe1, 0xf4, 0x11, 0xf7, 0x66, 0x4f, 0x42, 0xe8, 0xd7, 0x72, 0xa1, 0x26, 0xd8, 0x36, 0x6b, 0xf6,
	0x47, 0x6d, 0x85, 0x63, 0x08, 0x0b, 0x99, 0xe5, 0xd3, 0x5c, 0x64, 0xf4, 0xab, 0x21, 0xf7, 0xb8,
	0xa9, 0xce, 0xca, 0xdd, 0xd5, 0xf9, 0x02, 0x36, 0x6e, 0x7d, 0x1d, 0xc3, 0xfa, 0x24, 0x0d, 0x51,
	0x1e, 0xfb, 0xa6, 0xea, 0x36, 0x4d, 0x95, 0x7c, 0x05, 0x9b, 0x4d, 0x08, 0x9b, 0xda, 0x26, 0x74,
	0xdd, 0x5d, 0x19, 0x70, 0x14, 0xdf, 0x38, 0xa1, 0xbf, 0x56, 0x60, 0xed, 0xb8, 0xac, 0x17, 0xca,
	0xe7, 0xc3, 0xa0, 0x57, 0xa5, 0x7a, 0x66, 0x83, 0x91, 0x8c, 0xba, 0xc2, 0x5d, 0xad, 0x80, 0x93,
	0x6c, 0x0a, 0xaf, 0x9f, 0xa2, 0xda, 0x34, 0xaa, 0x83, 0x98, 0xcd, 0x22, 0xcf, 0xa8, 0x51, 0x07,
	0x1c, 0x45, 0xba, 0xb6, 0x42, 0x3f, 0xcf, 0x33, 0x2a, 0x6f, 0xc8, 0x2d, 0x42, 0xcb, 0xcb, 0x3c,
	0xa3, 0xa2, 0x0e, 0x38, 0x8a, 0xd6, 0xf2, 0x24, 0xcf, 0xa8, 0x94, 0xc6, 0xf2, 0x24, 0xa7, 0x3b,
	0xb8, 0xa8, 0x85, 0xa2, 0x32, 0x0e, 0x38, 0xc9, 0x36, 0x83, 0xe7, 0xa8, 0x06, 0x9f, 0x01, 0x42,
	0x6c, 0xb1, 0x4b, 0x25, 0x17, 0x55, 0x34, 0x24, 0x73, 0x03, 0x90, 0x69, 0x8c, 0x46, 0x07, 0x23,
	0x53, 0x40, 0x87, 0x31, 0x93, 0x2c, 0x57, 0xd1, 0x1a, 0xa9, 0x51, 0x44, 0xeb, 0xc9, 0x4c, 0x4c,
	0x5e, 0x1e, 0xe5, 0x2a, 0x5a, 0x37, 0xd6, 0x0e, 0xb7, 0x9b, 0x7e, 0xfb, 0x75, 0x4d, 0xff, 0xff,
	0x76, 0xd3, 0x27, 0x1c, 0xd6, 0x1d, 0xcd, 0xb6, 0x66, 0x38, 0x0f, 0x67, 0x69, 0x79, 0xe9, 0xbb,
	0xc9, 0xc1, 0x37, 0xae, 0xdd, 0x05, 0x0c, 0xcf, 0x53, 0x3d, 0xbb, 0xd7, 0x60, 0xa3, 0x52, 0x77,
	0x9b, 0x52, 0x27, 0x33, 0x18, 0x1d, 0xce, 0x0a, 0x99, 0x3d, 0x68, 0x54, 0xdf, 0x40, 0xbd, 0xa6,
	0x81, 0x92, 0x5f, 0xf1, 0x4b, 0xf2, 0xaa, 0x7c, 0xf0, 0x2f, 0x51, 0xa3, 0xf4, 0x5a, 0x8d, 0xe2,
	0xdb, 0x21, 0x68, 0xb5, 0x43, 0xf2, 0x5b, 0x07, 0xb6, 0x4e, 0x84, 0xf6, 0xd3, 0xd7, 0x15, 0xe6,
	0x5d, 0x08, 0xe4, 0x55, 0x29, 0x14, 0x65, 0x31, 0x3c, 0x58, 0x73, 0x23, 0xfa, 0x19, 0x2a, 0xb9,
	0x39, 0xf3, 0x63, 0x7c, 0xe5, 0xb5, 0x63, 0xdc, 0x57, 0xb1, 0x7b, 0x77, 0x15, 0x3f, 0x05, 0x78,
	0x76, 0xe1, 0x3f, 0xee, 0xbd, 0x3a, 0x77, 0x7b, 0xfd, 0x02, 0x03, 0x9f, 0x13, 0x7b, 0x07, 0x06,
	0x24, 0x7c, 0x8d, 0x03, 0xd4, 0x70, 0xd7, 0x28, 0x90, 0x57, 0x02, 0x67, 0x47, 0x96, 0x3e, 0x07,
	0xd1, 0x8f, 0xba, 0x9f, 0xfc, 0x0c, 0x89, 0x8d, 0x02, 0xfd, 0x08, 0x9c, 0x1d, 0x59, 0x32, 0x1d,
	0x4c, 0xe6, 0x10, 0xba, 0x9f, 0xf5, 0x73, 0xbb, 0xd3, 0x9a, 0xdb, 0xcb, 0xf6, 0xde, 0xb2, 0x11,
	0xc2, 0xa0, 0x87, 0x7b, 0xc5, 0x2e, 0x02, 0x92, 0xdd, 0x45, 0x0c, 0xfc, 0x45, 0x4c, 0xfe, 0xec,
	0xc0, 0xf0, 0x50, 0x56, 0xd7, 0xff, 0xde, 0x27, 0x31, 0x84, 0x53, 0x25, 0x0b, 0xdc, 0x7d, 0x6e,
	0x94, 0x3a, 0xec, 0xce, 0xce, 0x9b, 0x7e, 0xf1, 0x18, 0xfb, 0x4b, 0x4b, 0xf2, 0x32, 0x3f, 0x6a,
	0x91, 0xd1, 0x93, 0x47, 0xe0, 0xf4, 0x64, 0xbf, 0x64, 0x2f, 0xf5, 0x97, 0xee, 0xa5, 0xe4, 0x1c,
	0x46, 0x26, 0xf5, 0x87, 0xba, 0xf4, 0x07, 0x7f, 0xf4, 0xa0, 0xcf, 0xe9, 0xe1, 0xc6, 0x0e, 0x60,
	0xd5, 0x5a, 0x30, 0xd6, 0x32, 0xb7, 0x3c, 0xc5, 0x5b, 0x37, 0x74, 0x36, 0x81, 0x0f, 0x21, 0xc4,
	0x67, 0x0b, 0x96, 0x8f, 0x6d, 0xa0, 0x41, 0xeb, 0x69, 0x14, 0x6f, 0x36, 0x0a, 0x6b, 0xfe, 0x11,
	0x0c, 0x68, 0x09, 0x92, 0x3d, 0x1d, 0xb7, 0x97, 0x7f, 0xfc, 0xbf, 0x96, 0xc6, 0x7a, 0x7c, 0x06,
	0xa1, 0x5b, 0x4f, 0x6c, 0xd9, 0xb6, 0x8d, 0xb7, 0x6f, 0x2a, 0x9b, 0xbc, 0x90, 0xa8, 0x26, 0xaf,
	0x56, 0xc5, 0xe3, 0xcd, 0x46, 0x61, 0xcd, 0x3f, 0x80, 0xd0, 0xbd, 0x72, 0xcc, 0x57, 0x6e, 0xbd,
	0x79, 0xe2, 0x01, 0x2a, 0x8f, 0xf1, 0x09, 0xcb, 0x3e, 0x87, 0x61, 0xeb, 0x9a, 0x9b, 0xe8, 0xad,
	0xb9, 0x19, 0xbf, 0x8d, 0x8a, 0x65, 0x83, 0x60, 0x17, 0x82, 0xa7, 0x2f, 0x71, 0x15, 0xbc, 0xe2,
	0xb2, 0x8e, 0x8a, 0xd6, 0xad, 0x7d, 0x0c, 0x01, 0x0d, 0x4d, 0x43, 0x51, 0x7b, 0x7e, 0x2e, 0x37,
	0x95, 0x57, 0xa5, 0x33, 0x6d, 0x06, 0xe0, 0x2b, 0xa6, 0xfb, 0xd0, 0x37, 0x3b, 0x83, 0x11, 0xcf,
	0x37, 0xd6, 0x74, 0xcc, 0xda, 0x2a, 0xe3, 0xf0, 0xe4, 0xf1, 0xb7, 0xef, 0x5f, 0xe6, 0x7a, 0xb6,
	0x18, 0xef, 0x4d, 0x64, 0xb1, 0x3f, 0xae, 0x85, 0xca, 0x52, 0xb5, 0x7f, 0x95, 0x6a, 0xa1, 0x0a,
	0x31, 0x97, 0xe5, 0x7e, 0x2d, 0xd4, 0x8f, 0x42, 0xed, 0x57, 0xe3, 0x71, 0x9f, 0x1e, 0xf6, 0x9f,
	0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x8a, 0xf8, 0x1c, 0x05, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RemoteClient is the client API for Remote service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteClient interface {
	Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandResponse, error)
	ReadFile(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	WriteFile(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error)
	Template(ctx context.Context, in *TemplateRequest, opts ...grpc.CallOption) (*TemplateResponse, error)
	CopyFile(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error)
	WaitHost(ctx context.Context, in *WaitHostRequest, opts ...grpc.CallOption) (*Empty, error)
	GetFileInfo(ctx context.Context, in *PathRequest, opts ...grpc.CallOption) (*GetFileInfoResponse, error)
	Mkdir(ctx context.Context, in *PathRequest, opts ...grpc.CallOption) (*OSResponse, error)
	Chmod(ctx context.Context, in *ChmodRequest, opts ...grpc.CallOption) (*OSResponse, error)
	Chown(ctx context.Context, in *ChownRequest, opts ...grpc.CallOption) (*OSResponse, error)
	Ensure(ctx context.Context, in *EnsureRequest, opts ...grpc.CallOption) (*EnsureResponse, error)
}

type remoteClient struct {
	cc *grpc.ClientConn
}

func NewRemoteClient(cc *grpc.ClientConn) RemoteClient {
	return &remoteClient{cc}
}

func (c *remoteClient) Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/pb.Remote/Command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) ReadFile(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := c.cc.Invoke(ctx, "/pb.Remote/ReadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) WriteFile(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := c.cc.Invoke(ctx, "/pb.Remote/WriteFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) Template(ctx context.Context, in *TemplateRequest, opts ...grpc.CallOption) (*TemplateResponse, error) {
	out := new(TemplateResponse)
	err := c.cc.Invoke(ctx, "/pb.Remote/Template", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) CopyFile(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error) {
	out := new(CopyResponse)
	err := c.cc.Invoke(ctx, "/pb.Remote/CopyFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) WaitHost(ctx context.Context, in *WaitHostRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Remote/WaitHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) GetFileInfo(ctx context.Context, in *PathRequest, opts ...grpc.CallOption) (*GetFileInfoResponse, error) {
	out := new(GetFileInfoResponse)
	err := c.cc.Invoke(ctx, "/pb.Remote/GetFileInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) Mkdir(ctx context.Context, in *PathRequest, opts ...grpc.CallOption) (*OSResponse, error) {
	out := new(OSResponse)
	err := c.cc.Invoke(ctx, "/pb.Remote/Mkdir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) Chmod(ctx context.Context, in *ChmodRequest, opts ...grpc.CallOption) (*OSResponse, error) {
	out := new(OSResponse)
	err := c.cc.Invoke(ctx, "/pb.Remote/Chmod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) Chown(ctx context.Context, in *ChownRequest, opts ...grpc.CallOption) (*OSResponse, error) {
	out := new(OSResponse)
	err := c.cc.Invoke(ctx, "/pb.Remote/Chown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) Ensure(ctx context.Context, in *EnsureRequest, opts ...grpc.CallOption) (*EnsureResponse, error) {
	out := new(EnsureResponse)
	err := c.cc.Invoke(ctx, "/pb.Remote/Ensure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteServer is the server API for Remote service.
type RemoteServer interface {
	Command(context.Context, *CommandRequest) (*CommandResponse, error)
	ReadFile(context.Context, *ReadRequest) (*ReadResponse, error)
	WriteFile(context.Context, *WriteRequest) (*WriteResponse, error)
	Template(context.Context, *TemplateRequest) (*TemplateResponse, error)
	CopyFile(context.Context, *CopyRequest) (*CopyResponse, error)
	WaitHost(context.Context, *WaitHostRequest) (*Empty, error)
	GetFileInfo(context.Context, *PathRequest) (*GetFileInfoResponse, error)
	Mkdir(context.Context, *PathRequest) (*OSResponse, error)
	Chmod(context.Context, *ChmodRequest) (*OSResponse, error)
	Chown(context.Context, *ChownRequest) (*OSResponse, error)
	Ensure(context.Context, *EnsureRequest) (*EnsureResponse, error)
}

func RegisterRemoteServer(s *grpc.Server, srv RemoteServer) {
	s.RegisterService(&_Remote_serviceDesc, srv)
}

func _Remote_Command_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).Command(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Remote/Command",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).Command(ctx, req.(*CommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_ReadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).ReadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Remote/ReadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).ReadFile(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_WriteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).WriteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Remote/WriteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).WriteFile(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_Template_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).Template(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Remote/Template",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).Template(ctx, req.(*TemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_CopyFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).CopyFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Remote/CopyFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).CopyFile(ctx, req.(*CopyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_WaitHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).WaitHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Remote/WaitHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).WaitHost(ctx, req.(*WaitHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_GetFileInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).GetFileInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Remote/GetFileInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).GetFileInfo(ctx, req.(*PathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_Mkdir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).Mkdir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Remote/Mkdir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).Mkdir(ctx, req.(*PathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_Chmod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChmodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).Chmod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Remote/Chmod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).Chmod(ctx, req.(*ChmodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_Chown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).Chown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Remote/Chown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).Chown(ctx, req.(*ChownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_Ensure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnsureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).Ensure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Remote/Ensure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).Ensure(ctx, req.(*EnsureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Remote_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Remote",
	HandlerType: (*RemoteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Command",
			Handler:    _Remote_Command_Handler,
		},
		{
			MethodName: "ReadFile",
			Handler:    _Remote_ReadFile_Handler,
		},
		{
			MethodName: "WriteFile",
			Handler:    _Remote_WriteFile_Handler,
		},
		{
			MethodName: "Template",
			Handler:    _Remote_Template_Handler,
		},
		{
			MethodName: "CopyFile",
			Handler:    _Remote_CopyFile_Handler,
		},
		{
			MethodName: "WaitHost",
			Handler:    _Remote_WaitHost_Handler,
		},
		{
			MethodName: "GetFileInfo",
			Handler:    _Remote_GetFileInfo_Handler,
		},
		{
			MethodName: "Mkdir",
			Handler:    _Remote_Mkdir_Handler,
		},
		{
			MethodName: "Chmod",
			Handler:    _Remote_Chmod_Handler,
		},
		{
			MethodName: "Chown",
			Handler:    _Remote_Chown_Handler,
		},
		{
			MethodName: "Ensure",
			Handler:    _Remote_Ensure_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "remote.proto",
}
